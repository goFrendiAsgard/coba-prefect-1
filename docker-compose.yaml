services:

  db:
    image: mysql:8.0
    container_name: prefect-db
    restart: always
    environment:
      - MYSQL_DATABASE=sample
      - MYSQL_ROOT_PASSWORD=toor
    ports:
      - '3306:3306'

  postgres:
    image: "postgres:11"
    hostname: postgres
    container_name: prefect-postgre
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-prefect_user}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-prefect_password}
      POSTGRES_DB: ${POSTGRES_DB:-prefect_db}
    restart: "unless-stopped"
    command:
      - "postgres"
      - "-c"
      - "max_connections=150"
    
  hasura:
    image: "hasura/graphql-engine:v2.1.1"
    container_name: prefect-hasura
    hostname: hasura
    init: true
    ports:
      - "127.0.0.1:${HASURA_HOST_PORT:-3000}:3000"
    command: "graphql-engine serve"
    environment:
      HASURA_GRAPHQL_DATABASE_URL: ${DB_CONNECTION_URL:-postgresql://prefect_user:prefect_password@postgres:5432/prefect_db}
      HASURA_GRAPHQL_ENABLE_CONSOLE: "true"
      HASURA_GRAPHQL_SERVER_PORT: "${HASURA_GRAPHQL_SERVER_PORT:-3000}"
      HASURA_GRAPHQL_QUERY_PLAN_CACHE_SIZE: 100
      HASURA_GRAPHQL_LOG_LEVEL: "warn"
      HASURA_GRAPHQL_V1_BOOLEAN_NULL_COLLAPSE: "true"
    healthcheck:
      test: wget -O - http://hasura:${HASURA_GRAPHQL_SERVER_PORT:-3000}/healthz &>/dev/null || exit 1
      interval: 10s
      timeout: 2s
      retries: 60
      start_period: 1s 
    restart: "unless-stopped"
    depends_on:
      - postgres
  
  graphql:
    image: "prefecthq/server:core-1.1.0"
    container_name: prefect-graphql
    hostname: graphql
    command: bash -c "${PREFECT_SERVER_DB_CMD:-prefect-server database upgrade -y} && python src/prefect_server/services/graphql/server.py"
    environment:
      PREFECT_SERVER_DB_CMD: ${PREFECT_SERVER_DB_CMD:-"echo 'DATABASE MIGRATIONS SKIPPED'"}
      PREFECT_SERVER__DATABASE__CONNECTION_URL: ${DB_CONNECTION_URL:-postgresql://prefect_user:prefect_password@postgres:5432/prefect_db}
      PREFECT_SERVER__HASURA__ADMIN_SECRET: ${PREFECT_SERVER__HASURA__ADMIN_SECRET:-hasura-secret-admin-secret}
      PREFECT_SERVER__HASURA__HOST: hasura
      PREFECT__CONTEXT__SECRETS__MYSQL_HOST: db
      PREFECT__CONTEXT__SECRETS__MYSQL_USER: root
      PREFECT__CONTEXT__SECRETS__MYSQL_PASSWORD: toor
      PREFECT__CONTEXT__SECRETS__MYSQL_DATABASE: sample
    restart: "unless-stopped"
    depends_on:
      - hasura
  
  towel:
    image: "prefecthq/server:core-1.1.0"
    container_name: prefect-towel
    command: "python src/prefect_server/services/towel/__main__.py"
    environment:
      PREFECT_SERVER__HASURA__ADMIN_SECRET: ${PREFECT_SERVER__HASURA__ADMIN_SECRET:-hasura-secret-admin-secret}
      PREFECT_SERVER__HASURA__HOST: hasura
    restart: "unless-stopped"
    depends_on:
      - graphql
  
  apollo:
    image: "prefecthq/apollo:core-1.1.0"
    container_name: prefect-apollo
    hostname: apollo
    ports:
      - "${APOLLO_PORT:-4200}:4200"
    command: bash -c "./post-start.sh && npm run serve"
    environment:
      HASURA_API_URL: http://hasura:3000/v1alpha1/graphql
      PREFECT_API_HEALTH_URL: http://graphql:4201/health
      PREFECT_SERVER__TELEMETRY__ENABLED: "false"
      GRAPHQL_SERVICE_HOST: http://graphql
      GRAPHQL_SERVICE_PORT: 4201
    restart: "unless-stopped"
    depends_on:
      - graphql
  
  ui:
    image: "prefecthq/ui:core-1.1.0"
    container_name: prefect-ui
    hostname: ui
    ports:
      - "${UI_PORT:-8080}:8080"
    command: "/intercept.sh"
    environment:
      PREFECT_SERVER__APOLLO_URL: http://localhost:4200/graphql
    restart: "unless-stopped"
    depends_on:
      - apollo

  prefect-agent:
    build: ./prefect-agent
    container_name: prefect-agent
    hostname: agent
    image: prefect-agent-adhe
    command: bash -c "prefect backend server && prefect agent local start --api http://apollo:4200/api"
    environment:
      PREFECT__SERVER__HOST: http://apollo
      PREFECT__CONTEXT__SECRETS__MYSQL_HOST: db
      PREFECT__CONTEXT__SECRETS__MYSQL_USER: root
      PREFECT__CONTEXT__SECRETS__MYSQL_PASSWORD: toor
      PREFECT__CONTEXT__SECRETS__MYSQL_DATABASE: sample
    depends_on:
      - apollo
    restart: "unless-stopped"
    volumes:
      - ./flows:/opt/prefect/flows